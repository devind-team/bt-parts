"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress

type File {
  """Bucket name"""
  bucket: String!

  """Created data"""
  createdAt: DateTime!

  """ID"""
  id: ID!

  """Path file in bucket"""
  key: String!

  """Name"""
  name: String!

  """Service url file"""
  serverUrl: String!

  """Updated data"""
  updatedAt: DateTime!

  """User ID"""
  user: User
  userId: String
}

input FileUploadInput {
  bucket: String!
  fileName: String!
  name: String!
}

type FileUploadType {
  bucket: String!
  fileName: String!
  name: String!
  presignedUrl: String!
}

enum Gender {
  FEMALE
  MALE
  UNKNOWN
}

type Mutation {
  login(userLoginInput: UserLoginInput!): UserLoginType!
  register(userRegisterInput: UserRegisterInput!): UserLoginType
  uploadAvatar(fileUpload: FileUploadInput!): User!
}

type Query {
  me: User!
  presignedPutUrl(fileName: String!): FileUploadType!
}

enum Role {
  ADMIN
  BUYER
  LOGIST
  SELLER
  USER
}

type User {
  """Avatar"""
  avatar: String

  """Birthday datetime"""
  birthday: DateTime

  """Register data"""
  createdAt: DateTime!

  """Email"""
  email: String!

  """My files"""
  files: [File!]

  """First Name"""
  firstName: String!

  """Gender"""
  gender: Gender!

  """ID"""
  id: ID!

  """Active user"""
  isActive: Boolean!

  """Last Name"""
  lastName: String!

  """Patronymic"""
  patronymic: String

  """Phone number"""
  phone: String

  """Role"""
  role: Role!

  """TimeZone"""
  tz: String!

  """Дата обновления"""
  updatedAt: DateTime!

  """Username"""
  username: String!
}

type UserCountAggregate {
  _all: Int!
  avatar: Int!
  birthday: Int!
  createdAt: Int!
  email: Int!
  firstName: Int!
  gender: Int!
  id: Int!
  isActive: Int!
  lastName: Int!
  patronymic: Int!
  phone: Int!
  role: Int!
  tz: Int!
  updatedAt: Int!
  username: Int!
}

input UserLoginInput {
  password: String!
  username: String!
}

type UserLoginType {
  accessToken: String!
  user: User!
}

type UserMaxAggregate {
  avatar: String
  birthday: DateTime
  createdAt: DateTime
  email: String
  firstName: String
  gender: Gender
  id: String
  isActive: Boolean
  lastName: String
  patronymic: String
  phone: String
  role: Role
  tz: String
  updatedAt: DateTime
  username: String
}

type UserMinAggregate {
  avatar: String
  birthday: DateTime
  createdAt: DateTime
  email: String
  firstName: String
  gender: Gender
  id: String
  isActive: Boolean
  lastName: String
  patronymic: String
  phone: String
  role: Role
  tz: String
  updatedAt: DateTime
  username: String
}

input UserRegisterInput {
  """Date of birthday """
  birthday: DateTime
  email: EmailAddress!
  firstName: String!
  lastName: String!
  password: String!
  patronymic: String
  username: String!
}